{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\MFD\\\\frontend\\\\src\\\\components\\\\TaskFormComponent.js\",\n  _s = $RefreshSig$();\n// TaskFormComponent.js\n\nimport React, { useState } from 'react';\nimport { createTask } from '../services/taskService';\nimport '../assets/css/taskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskFormComponent({\n  refreshTasks\n}) {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Send a POST request to the /addTasks endpoint with the task data\n      const newTask = await createTask({\n        title,\n        description\n      }); // Store the new task\n\n      // Clear the form fields after successful submission\n      setTitle('');\n      setDescription('');\n\n      // Refresh tasks after adding a new task\n      refreshTasks(); // Call the refreshTasks function passed via props\n\n      // Prepend the new task to the existing tasks array\n      // Update state using the callback function to ensure correct state update\n      setTasks(prevTasks => [newTask, ...prevTasks]); // Prepend the new task to the existing tasks\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskFormComponent, \"1UKQWTfo2RWmkwPNsekAdQbvqFk=\");\n_c = TaskFormComponent;\nexport default TaskFormComponent;\nvar _c;\n$RefreshReg$(_c, \"TaskFormComponent\");","map":{"version":3,"names":["React","useState","createTask","jsxDEV","_jsxDEV","TaskFormComponent","refreshTasks","_s","title","setTitle","description","setDescription","handleSubmit","event","preventDefault","newTask","setTasks","prevTasks","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/MFD/frontend/src/components/TaskFormComponent.js"],"sourcesContent":["// TaskFormComponent.js\r\n\r\nimport React, { useState } from 'react';\r\nimport { createTask } from '../services/taskService';\r\nimport '../assets/css/taskForm.css';\r\n\r\nfunction TaskFormComponent({ refreshTasks }) {\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      // Send a POST request to the /addTasks endpoint with the task data\r\n      const newTask = await createTask({ title, description }); // Store the new task\r\n      \r\n      // Clear the form fields after successful submission\r\n      setTitle('');\r\n      setDescription('');\r\n\r\n      // Refresh tasks after adding a new task\r\n      refreshTasks(); // Call the refreshTasks function passed via props\r\n\r\n      // Prepend the new task to the existing tasks array\r\n      // Update state using the callback function to ensure correct state update\r\n      setTasks(prevTasks => [newTask, ...prevTasks]); // Prepend the new task to the existing tasks\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Add New Task</h2>\r\n      <div>\r\n        <label>Title</label>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={e => setTitle(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <div>\r\n        <label>Description</label>\r\n        <input\r\n          type=\"text\"\r\n          value={description}\r\n          onChange={e => setDescription(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\">Add Task</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TaskFormComponent;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,yBAAyB;AACpD,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,iBAAiBA,CAAC;EAAEC;AAAa,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAI;MACF;MACA,MAAMC,OAAO,GAAG,MAAMb,UAAU,CAAC;QAAEM,KAAK;QAAEE;MAAY,CAAC,CAAC,CAAC,CAAC;;MAE1D;MACAD,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;;MAElB;MACAL,YAAY,CAAC,CAAC,CAAC,CAAC;;MAEhB;MACA;MACAU,QAAQ,CAACC,SAAS,IAAI,CAACF,OAAO,EAAE,GAAGE,SAAS,CAAC,CAAC,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEd,OAAA;IAAMgB,QAAQ,EAAER,YAAa;IAAAS,QAAA,gBAC3BjB,OAAA;MAAAiB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBrB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,KAAM;QACboB,QAAQ,EAAEC,CAAC,IAAIpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACxCI,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAO;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BrB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjB,WAAY;QACnBkB,QAAQ,EAAEC,CAAC,IAAIlB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEX;AAAClB,EAAA,CAjDQF,iBAAiB;AAAA2B,EAAA,GAAjB3B,iBAAiB;AAmD1B,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}