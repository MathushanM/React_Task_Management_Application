{"ast":null,"code":"const baseUrl = 'http://localhost:3001/api/tasks';\nconst handleResponse = async response => {\n  if (!response.ok) {\n    const errorMessage = await response.text();\n    throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\n  }\n  return response.json();\n};\nconst handleError = error => {\n  console.error('There was a problem with the fetch operation:', error);\n};\n\n// src/services/taskService.js\n\nexport async function getTasks() {\n  try {\n    const response = await fetch('/api/tasks'); // Making a GET request to /api/tasks\n    if (!response.ok) {\n      throw new Error('Failed to fetch tasks');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    throw new Error('Failed to fetch tasks: ' + error.message);\n  }\n}\nexport const createTask = async task => {\n  try {\n    const response = await fetch(baseUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\n      },\n      body: JSON.stringify(task)\n    });\n    return handleResponse(response);\n  } catch (error) {\n    handleError(error);\n  }\n};","map":{"version":3,"names":["baseUrl","handleResponse","response","ok","errorMessage","text","Error","status","json","handleError","error","console","getTasks","fetch","data","message","createTask","task","method","headers","localStorage","getItem","body","JSON","stringify"],"sources":["C:/Users/hp/Desktop/MFD/frontend/src/services/taskService.js"],"sourcesContent":["const baseUrl = 'http://localhost:3001/api/tasks';\r\n\r\nconst handleResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorMessage = await response.text();\r\n    throw new Error(`HTTP error! Status: ${response.status}, Message: ${errorMessage}`);\r\n  }\r\n  return response.json();\r\n};\r\n\r\nconst handleError = (error) => {\r\n  console.error('There was a problem with the fetch operation:', error);\r\n};\r\n\r\n// src/services/taskService.js\r\n\r\nexport async function getTasks() {\r\n  try {\r\n    const response = await fetch('/api/tasks'); // Making a GET request to /api/tasks\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch tasks');\r\n    }\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    throw new Error('Failed to fetch tasks: ' + error.message);\r\n  }\r\n}\r\n\r\n\r\nexport const createTask = async (task) => {\r\n  try {\r\n    const response = await fetch(baseUrl, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n      },\r\n      body: JSON.stringify(task)\r\n    });\r\n    return handleResponse(response);\r\n  } catch (error) {\r\n    handleError(error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,OAAO,GAAG,iCAAiC;AAEjD,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;IAChB,MAAMC,YAAY,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAC1C,MAAM,IAAIC,KAAK,CAAE,uBAAsBJ,QAAQ,CAACK,MAAO,cAAaH,YAAa,EAAC,CAAC;EACrF;EACA,OAAOF,QAAQ,CAACM,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7BC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;AACvE,CAAC;;AAED;;AAEA,OAAO,eAAeE,QAAQA,CAAA,EAAG;EAC/B,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMW,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;IAC5C,IAAI,CAACX,QAAQ,CAACC,EAAE,EAAE;MAChB,MAAM,IAAIG,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,MAAMQ,IAAI,GAAG,MAAMZ,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOM,IAAI;EACb,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd,MAAM,IAAIJ,KAAK,CAAC,yBAAyB,GAAGI,KAAK,CAACK,OAAO,CAAC;EAC5D;AACF;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACF,MAAMf,QAAQ,GAAG,MAAMW,KAAK,CAACb,OAAO,EAAE;MACpCkB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAE;MAC3D,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC3B,CAAC,CAAC;IACF,OAAOhB,cAAc,CAACC,QAAQ,CAAC;EACjC,CAAC,CAAC,OAAOQ,KAAK,EAAE;IACdD,WAAW,CAACC,KAAK,CAAC;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}