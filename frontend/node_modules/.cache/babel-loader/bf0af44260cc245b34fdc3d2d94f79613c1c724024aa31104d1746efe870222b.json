{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\MFD\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SignUpPage from './components/signUpPage';\nimport TaskListComponent from './components/TaskListComponent';\nimport './assets/css/App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createPath } from 'react-router'; // This line might not be necessary depending on your usage\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const handleLogin = () => {\n    // Logic to handle user login (e.g., setting isLoggedIn state to true)\n    setIsLoggedIn(true);\n  };\n  const handleLogout = () => {\n    // Logic to handle user logout (e.g., setting isLoggedIn state to false)\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Task Manager\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        render: () => /*#__PURE__*/_jsxDEV(SignUpPage, {\n          isLoggedIn: isLoggedIn,\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/tasks\",\n        render: () => isLoggedIn ? /*#__PURE__*/_jsxDEV(TaskListComponent, {\n          onLogout: handleLogout\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g0MSgNVZk+vKiEFnDJ9VPEfswFA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SignUpPage","TaskListComponent","BrowserRouter","Router","Route","Switch","createPath","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","handleLogin","handleLogout","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","render","onLogin","onLogout","Redirect","to","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/MFD/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SignUpPage from './components/signUpPage';\nimport TaskListComponent from './components/TaskListComponent';\nimport './assets/css/App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { createPath } from 'react-router'; // This line might not be necessary depending on your usage\n\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  const handleLogin = () => {\n    // Logic to handle user login (e.g., setting isLoggedIn state to true)\n    setIsLoggedIn(true);\n  };\n\n  const handleLogout = () => {\n    // Logic to handle user logout (e.g., setting isLoggedIn state to false)\n    setIsLoggedIn(false);\n  };\n\n  return (\n    <Router>\n      <div className=\"form-container\">\n        <h1>Task Manager</h1>\n        <Route\n          path=\"/signup\"\n          render={() => (\n            <SignUpPage\n              isLoggedIn={isLoggedIn}\n              onLogin={handleLogin}\n            />\n          )}\n        />\n        <Route\n          path=\"/tasks\"\n          render={() => (\n            isLoggedIn ? (\n              <TaskListComponent onLogout={handleLogout} />\n            ) : (\n              <Redirect to=\"/signup\" />\n            )\n          )}\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,iBAAiB,MAAM,gCAAgC;AAC9D,OAAO,sBAAsB;AAC7B,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,SAASC,UAAU,QAAQ,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxB;IACAD,aAAa,CAAC,IAAI,CAAC;EACrB,CAAC;EAED,MAAME,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAF,aAAa,CAAC,KAAK,CAAC;EACtB,CAAC;EAED,oBACEJ,OAAA,CAACL,MAAM;IAAAY,QAAA,eACLP,OAAA;MAAKQ,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BP,OAAA;QAAAO,QAAA,EAAI;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBZ,OAAA,CAACJ,KAAK;QACJiB,IAAI,EAAC,SAAS;QACdC,MAAM,EAAEA,CAAA,kBACNd,OAAA,CAACR,UAAU;UACTW,UAAU,EAAEA,UAAW;UACvBY,OAAO,EAAEV;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB;MACD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACFZ,OAAA,CAACJ,KAAK;QACJiB,IAAI,EAAC,QAAQ;QACbC,MAAM,EAAEA,CAAA,KACNX,UAAU,gBACRH,OAAA,CAACP,iBAAiB;UAACuB,QAAQ,EAAEV;QAAa;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAE7CZ,OAAA,CAACiB,QAAQ;UAACC,EAAE,EAAC;QAAS;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAE1B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACV,EAAA,CAvCQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAyCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}