{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\MFD\\\\frontend\\\\src\\\\components\\\\TaskListComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createTask, getTasks, deleteTask } from '../services/taskService'; // Import the deleteTask function\nimport '../assets/css/taskForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskListComponent() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [checkedTasks, setCheckedTasks] = useState(() => {\n    const storedTasks = localStorage.getItem('checkedTasks');\n    return storedTasks ? JSON.parse(storedTasks) : {};\n  });\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  async function fetchTasks() {\n    try {\n      const data = await getTasks();\n      setTasks(data);\n    } catch (error) {\n      console.error(error.message);\n    }\n  }\n  useEffect(() => {\n    localStorage.setItem('checkedTasks', JSON.stringify(checkedTasks));\n  }, [checkedTasks]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Send a POST request to the backend to create a new task\n      await createTask({\n        title,\n        description\n      });\n\n      // Clear the form fields after successful submission\n      setTitle('');\n      setDescription('');\n\n      // Refresh tasks after adding a new task\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      // Send a DELETE request to the backend to delete the task\n      await deleteTask(id);\n\n      // Refresh tasks after deleting the task\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  const handleCheckboxChange = id => {\n    setCheckedTasks(prevState => ({\n      ...prevState,\n      [id]: !prevState[id]\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), tasks && tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: checkedTasks[task.id],\n          onChange: () => handleCheckboxChange(task.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [task.title, \" - \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"delete-button\",\n          onClick: () => handleDelete(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), \" \"]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskListComponent, \"w+X0bYAM/ciQNT17F+oqJa/mTtg=\");\n_c = TaskListComponent;\nexport default TaskListComponent;\nvar _c;\n$RefreshReg$(_c, \"TaskListComponent\");","map":{"version":3,"names":["React","useState","useEffect","createTask","getTasks","deleteTask","jsxDEV","_jsxDEV","TaskListComponent","_s","tasks","setTasks","title","setTitle","description","setDescription","checkedTasks","setCheckedTasks","storedTasks","localStorage","getItem","JSON","parse","fetchTasks","data","error","console","message","setItem","stringify","handleSubmit","event","preventDefault","handleDelete","id","handleCheckboxChange","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","length","map","task","className","checked","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/MFD/frontend/src/components/TaskListComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createTask, getTasks, deleteTask } from '../services/taskService'; // Import the deleteTask function\r\nimport '../assets/css/taskForm.css';\r\n\r\n\r\nfunction TaskListComponent() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [checkedTasks, setCheckedTasks] = useState(() => {\r\n    const storedTasks = localStorage.getItem('checkedTasks');\r\n    return storedTasks ? JSON.parse(storedTasks) : {};\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  async function fetchTasks() {\r\n    try {\r\n      const data = await getTasks();\r\n      setTasks(data);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('checkedTasks', JSON.stringify(checkedTasks));\r\n  }, [checkedTasks]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      // Send a POST request to the backend to create a new task\r\n      await createTask({ title, description });\r\n\r\n      // Clear the form fields after successful submission\r\n      setTitle('');\r\n      setDescription('');\r\n\r\n      // Refresh tasks after adding a new task\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      // Send a DELETE request to the backend to delete the task\r\n      await deleteTask(id);\r\n\r\n      // Refresh tasks after deleting the task\r\n      fetchTasks();\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = (id) => {\r\n    setCheckedTasks(prevState => ({\r\n      ...prevState,\r\n      [id]: !prevState[id]\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add New Task</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={e => setTitle(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Description</label>\r\n          <input\r\n            type=\"text\"\r\n            value={description}\r\n            onChange={e => setDescription(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n      \r\n      <h2>Tasks List</h2>\r\n      {tasks && tasks.length > 0 ? (\r\n        <ul>\r\n          {tasks.map(task => (\r\n            <li key={task.id} className = \"task-item\">\r\n              <input \r\n                type=\"checkbox\"\r\n                checked={checkedTasks[task.id]}\r\n                onChange={() => handleCheckboxChange(task.id)} \r\n              /> {/* Checkbox */}\r\n              <span>{task.title} - {task.description}</span> {/* Task text */}\r\n              <button className=\"delete-button\" onClick={() => handleDelete(task.id)}>Delete</button> {/* Delete button */}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      ) : (\r\n        <p>No tasks available</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskListComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}